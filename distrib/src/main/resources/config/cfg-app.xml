<?xml version="1.0"?>
<root>
    <configuration>

        <!--
            Specify a bunch of instances to be explored.
            You'll find the application exploration report in: ${reportFolder}/${instance.id}
        -->
        <instances>

            <instance>

                <id>google</id>
                <domain>http://www.google.com</domain>

            </instance>

            <!-- You can specify another instance (i.e: a new version of the application)

                <instance>
                    <id>myWebApp-2.0</id>
                    <domain>myWebAppDomain-2.0</domain>
                    <applicationImpl>myWebAppImpl-2.0</applicationImpl> (optional)
                    <applicationVersion>myWebAppImplVersion-2.0</applicationVersion> (optional)
                </instance>

            -->

        </instances>

        <reportFolder></reportFolder>

        <!-- The applicationDir is the directory that is parsed to find the applicationImpl Classes -->
        <applicationDir></applicationDir>

        <!-- The user configuration file define which user profiles will be used to explore the application.
            The path is relative to this file
        -->
        <usersCfgFile>cfg-users.xml</usersCfgFile>

        <!-- The browserWidth of the browser to be used during the exploration -->
        <browserWidth>800</browserWidth>

        <!-- The browserHeight of the browser to be used during the exploration -->
        <browserHeight>600</browserHeight>

        <!-- The binary path to the browser executable. Needed by selenium to start the browser -->
        <browserBinary>/usr/bin/google-chrome</browserBinary>

        <!-- The explorer will follow (click on) all the links found over the application pages.
            Note: a link is an html node: <a href="x">. The link href has to be defined and not empty.
            The explorer will not explore the content of pages that are out of the application domain.
        -->
        <followLinks>false</followLinks>

        <!-- The explorer will follow (click on) all the buttons found over the application pages.
            Note: a button is implemented in two ways in html: <button /> or <input type="button" />.
            The text or value of the node has to be defined and not empty. The explorer will not
            explore the content of pages that are out of the application domain.
        -->
        <followButtons>false</followButtons>

        <!-- The explorer will take screenshot of the pages during exploration -->
        <takePageScreenshot>true</takePageScreenshot>

        <!-- The explorer will take element screenshots during exploration -->
        <takePageElementScreenshot>true</takePageElementScreenshot>

        <!-- The General applicationImpl. Can be overidden with the ${instance.applicationImpl} parameter -->
        <applicationImpl>com.smash.revolance.ui.model.application.SimpleApplication</applicationImpl>

        <!-- Prevent the explorer from clicking on links in the application given their text/value -->
        <excludeLinks>

            <!-- <excludeLinkText>link</excludeLinkText> -->

        </excludeLinks>

        <!-- Prevent the explorer from clicking on buttons in the application given their text/value -->
        <excludeButtons>

            <!-- <excludeButtonText>button</excludeButtonText> -->

        </excludeButtons>

    </configuration>
</root>