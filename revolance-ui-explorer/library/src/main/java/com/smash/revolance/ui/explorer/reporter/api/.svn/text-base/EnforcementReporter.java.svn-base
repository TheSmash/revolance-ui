package ets.bour.revolance.reporter.api;

import ets.bour.revolance.application.Application;
import ets.bour.revolance.page.IPage;
import ets.bour.revolance.reporter.Reporter;
import ets.bour.revolance.user.User;
import freemarker.template.Template;
import org.apache.commons.io.IOUtils;

import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * User: ebour
 * Date: 27/01/13
 * Time: 17:39
 */
public class EnforcementReporter implements Reporter<Application>
{

    public void doReport( Application app, File file ) throws Exception
    {
        // data-model
        Map<String, Object> input = new HashMap<String, Object>();
        List<User> users = app.getUsers();

        FileWriter writer = null;
        try
        {
            // report user enforcement
            for (User user : users)
            {
                Template template = app.getTemplateForUserEnforcement();

                /*
                if (user.isBuildSitemapEnabled())
                {
                    user.doSitemapReport();
                }
                */

                List<IPage> pages = new ArrayList<IPage>();
                pages.addAll(user.getSiteMap().getPages());

                /*
                if(getApplication().isCompareUsersCrossInstancesEnabled())
                {
                    for(IPage page : pages)
                    {
                        page.save();
                    }
                }
                */

                input.put("user", user);
                input.put("pages", pages);

                // File output
                writer = new FileWriter( file );
                template.process(input, writer);
                writer.flush();
            }

            // report application enforcement
            Template template = app.getTemplateForApplicationEnforcement();
            input = new HashMap<String, Object>();
            input.put("users", users);

            writer = new FileWriter(app.getEnforcementReportFile());
            template.process(input, writer);
            writer.flush();

            System.out.println("Enforcement report has been generated in file: " + app.getEnforcementReportFile().getAbsolutePath());
        }
        finally
        {
            IOUtils.closeQuietly(writer);
        }
    }

}
